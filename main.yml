name: main

on:
  workflow_call:
    inputs:
      code-coverage-gistid:
        description: Code coverage gist ID
        required: true
        type: string
      node_auth_token:
        description: Node auth token to use to install git dependencies
        default: ${{ secrets.GITHUB_TOKEN }}
        type: string
      node-version:
        description: Node version to use
        type: string
      registry-url:
        description: NPM registry URL to use
        type: string

    secrets:
      SSH_PRIVATE_KEY:
        description: SSH private key
        required: true

jobs:
  test_and_coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    permissions:
      contents: read
      packages: read

    steps:
      # Init
      - name: init
        uses: Mafalda-SFU/Github-Actions-init@v1
        with:
          NODE_AUTH_TOKEN: ${{ inputs.node_auth_token }}
          node-version: ${{ inputs.node-version }}
          registry-url: ${{ inputs.registry-url }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Tests
      - name: Install test reporters
        run: |
          if npm list jest >/dev/null 2>&1; then
            npm install --no-save --verbose \
              @matteoh2o1999/github-actions-jest-reporter
          else
            npm install --no-save --verbose \
              @mafalda-sfu/test-reporter-json \
              node-test-github-reporter
          fi

      - name: Run tests
        run: |
          if npm list jest >/dev/null 2>&1; then
            npm test -- \
              --reporters=@matteoh2o1999/github-actions-jest-reporter \
              --coverageReporters=json-summary
          else
            NODE_OPTIONS=`echo "
              --test-reporter=spec
                --test-reporter-destination=stdout
              --test-reporter=node-test-github-reporter
                --test-reporter-destination=stderr
              --test-reporter=@mafalda-sfu/test-reporter-json
                --test-reporter-destination=coverage.json
            " | tr -d '\r\n'` \
              npm test

            # Ensure coverage.json has been created
            test -f coverage.json
          fi

      - name: Code coverage
        run: |
          if npm list jest >/dev/null 2>&1; then
            export CODE_COVERAGE=$( \
              cat coverage/coverage-summary.json | \
              jq .total.statements.pct \
            )
          else
            export CODE_COVERAGE=$( \
              cat coverage.json | \
              jq .summary.totals.coveredLinePercent | \
              jq '.*100|round/100' \
            )
          fi

          echo "codeCoverage=$CODE_COVERAGE" >> $GITHUB_ENV
          echo "### Code coverage: ${CODE_COVERAGE}%" >> $GITHUB_STEP_SUMMARY

      # Code coverage badge
      - name: Code coverage badge
        uses: Schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          filename: ${{ github.event.repository.name }}.json
          gistID: ${{ inputs.code-coverage-gistid }}
          label: Coverage
          maxColorRange: 90
          message: ${{ env.codeCoverage }}%
          minColorRange: 50
          namedLogo: Jest
          valColorRange: ${{ env.codeCoverage }}
